name: Run Tests DEV Environment
run-name: Test Execution DEV

on: 
 push:
    branches: [ dev ]


jobs:
  environment-setup:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [16.x]
        include:

          - site: "testing"
            datacenter: "site-qa"
    runs-on: ${{ matrix.os }}

    steps:

      - uses: actions/checkout@v3

      # Install node on the runner
      - name: Install Node - Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # Install the newman command-line utility, also install the html extra reporter
      - name: Install newman
        run: | #por las dudas install antes ya que es necesario para CI
          npm install -g newman
          npm install -g newman-reporter-htmlextra 

      # Make directory to upload the test results
      - name: Make directory for uploading the test results
        run: mkdir -p test_results

      # Run the postman collection
      - name: Run API Tests
        run: newman run "https://api.getpostman.com/collections/${{secrets.RUN_COLLECTION}}?apikey=${{secrets.POSTMAN_APIKEY}}" --environment "https://api.getpostman.com/environments/${{secrets.RUN_ENVIRONMENT_DEV}}?apikey=${{secrets.POSTMAN_APIKEY}}" --reporters htmlextra --reporter-htmlextra-export "test_results/test_report.html"
        #newman run "${{secrets.RUN_COLLECTION}}" --environment "${{secrets.RUN_ENVIRONMENT_QA}}" -r htmlextra --reporter-htmlextra-export test_results/test_report.html
           # Upload the contents of test results directory to workspace
      - name: Output the run details HTML
        uses: actions/upload-artifact@v3
        if: always() 
        with:
          name: test-run-reports-HTMLEXTRA
          path: test_results

      - uses: actions/checkout@master
      - uses: matt-ball/newman-action@master
        if: always() 
        with:
         apiKey: ${{secrets.POSTMAN_APIKEY}}
         collection: ${{secrets.RUN_COLLECTION}}
         environment: ${{secrets.RUN_ENVIRONMENT_QA}}
         reporters: '["junit"]'
         reporter: '[ { "junit" : { "export" : "newman/*.xml" }} ]'

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() #always run even if the previous step fails
        with:
          report_paths: 'newman/*.xml'
          detailed_summary: true
          include_passed: true
